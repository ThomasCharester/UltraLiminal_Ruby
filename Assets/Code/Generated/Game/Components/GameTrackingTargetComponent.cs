//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTrackingTarget;

    public static Entitas.IMatcher<GameEntity> TrackingTarget {
        get {
            if (_matcherTrackingTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TrackingTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTrackingTarget = matcher;
            }

            return _matcherTrackingTarget;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.AnimationRigShit.TrackingTarget trackingTarget { get { return (Code.Gameplay.Features.AnimationRigShit.TrackingTarget)GetComponent(GameComponentsLookup.TrackingTarget); } }
    public UnityEngine.Transform TrackingTarget { get { return trackingTarget.Value; } }
    public bool hasTrackingTarget { get { return HasComponent(GameComponentsLookup.TrackingTarget); } }

    public GameEntity AddTrackingTarget(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.TrackingTarget;
        var component = (Code.Gameplay.Features.AnimationRigShit.TrackingTarget)CreateComponent(index, typeof(Code.Gameplay.Features.AnimationRigShit.TrackingTarget));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTrackingTarget(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.TrackingTarget;
        var component = (Code.Gameplay.Features.AnimationRigShit.TrackingTarget)CreateComponent(index, typeof(Code.Gameplay.Features.AnimationRigShit.TrackingTarget));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTrackingTarget() {
        RemoveComponent(GameComponentsLookup.TrackingTarget);
        return this;
    }
}
