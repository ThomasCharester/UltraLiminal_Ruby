//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVectorSpawnPoint;

    public static Entitas.IMatcher<GameEntity> VectorSpawnPoint {
        get {
            if (_matcherVectorSpawnPoint == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VectorSpawnPoint);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVectorSpawnPoint = matcher;
            }

            return _matcherVectorSpawnPoint;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Common.VectorSpawnPoint vectorSpawnPoint { get { return (Code.Gameplay.Common.VectorSpawnPoint)GetComponent(GameComponentsLookup.VectorSpawnPoint); } }
    public UnityEngine.Vector3 VectorSpawnPoint { get { return vectorSpawnPoint.Value; } }
    public bool hasVectorSpawnPoint { get { return HasComponent(GameComponentsLookup.VectorSpawnPoint); } }

    public GameEntity AddVectorSpawnPoint(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.VectorSpawnPoint;
        var component = (Code.Gameplay.Common.VectorSpawnPoint)CreateComponent(index, typeof(Code.Gameplay.Common.VectorSpawnPoint));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceVectorSpawnPoint(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.VectorSpawnPoint;
        var component = (Code.Gameplay.Common.VectorSpawnPoint)CreateComponent(index, typeof(Code.Gameplay.Common.VectorSpawnPoint));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveVectorSpawnPoint() {
        RemoveComponent(GameComponentsLookup.VectorSpawnPoint);
        return this;
    }
}
